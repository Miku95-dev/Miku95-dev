- 👋 Hi, I’m @Miku95-dev
- 👀 I’m interested in ...
- 🌱 I’m currently learning ...
- 💞️ I’m looking to collaborate on ...
- 📫 How to reach me ...I love you

<!---
Miku95-dev/Miku95-dev is a ✨ special ✨ repository because its `README.md` (this file) appears on your GitHub profile.
You can click the Preview link to take a look at your changes.
--->
class Contact:
    def __init__(self, name, phone):
        self.name = name
        self.phone = phone

class AddressBook:
    def __init__(self):
        self.contacts = []

    def add_contact(self, contact):
        self.contacts.append(contact)

    def list_contacts(self):
        for contact in self.contacts:
            print(f"Name: {contact.name}, Phone: {contact.phone}")

def main():
    address_book = AddressBook()

    while True:
        print("\nAddress Book Menu:")
        print("1. Add Contact")
        print("2. List Contacts")
        print("3. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            name = input("Enter name: ")
            phone = input("Enter phone number: ")
            contact = Contact(name, phone)
            address_book.add_contact(contact)
            print("Contact added successfully!")
        elif choice == '2':
            address_book.list_contacts()
        elif choice == '3':
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()

// bai 2
Trước tiên, bạn cần cài đặt thư viện matplotlib bằng cách sử dụng lệnh sau:


pip install matplotlib
Sau đó, bạn có thể sử dụng đoạn mã sau để vẽ một hình chữ nhật đại diện cho một mảng:

python
import matplotlib.pyplot as plt

def draw_array(array):
    rows = len(array)
    cols = len(array[0])

    plt.figure()
    current_cmap = plt.get_cmap()

    plt.imshow(array, cmap=current_cmap, vmin=0, vmax=1)

    plt.xticks(range(cols), [str(i) for i in range(cols)])
    plt.yticks(range(rows), [str(i) for i in range(rows)])

    plt.title("Box Array")

    plt.show()

# Example array
my_array = [
    [1, 0, 1],
    [0, 1, 0],
    [1, 1, 0]
]

# Draw the array
draw_array(my_array)


// bai 3

# Generating a sequence of numbers
start = 1  # Starting number
end = 10   # Ending number (inclusive)
step = 1   # Step size

# Using a for loop to iterate over the sequence
for num in range(start, end + 1, step):
    print(num)


// bai 4

# Simple To-Do List Application

# Initialize an empty to-do list
todo_list = []

def show_menu():
    print("\nSimple To-Do List Application")
    print("1. View To-Do List")
    print("2. Add a Task")
    print("3. Remove a Task")
    print("4. Exit")

def view_tasks():
    if not todo_list:
        print("\nYour to-do list is empty.")
    else:
        print("\nYour To-Do List:")
        for index, task in enumerate(todo_list, start=1):
            print(f"{index}. {task}")

def add_task():
    task = input("\nEnter the task you want to add: ")
    todo_list.append(task)
    print(f"Task '{task}' added to the to-do list.")

def remove_task():
    view_tasks()
    if todo_list:
        try:
            task_number = int(input("\nEnter the number of the task to remove: "))
            if 1 <= task_number <= len(todo_list):
                removed_task = todo_list.pop(task_number - 1)
                print(f"Task '{removed_task}' removed from the to-do list.")
            else:
                print("Invalid task number.")
        except ValueError:
            print("Please enter a valid number.")

def main():
    while True:
        show_menu()
        choice = input("\nEnter your choice (1-4): ")
        
        if choice == "1":
            view_tasks()
        elif choice == "2":
            add_task()
        elif choice == "3":
            remove_task()
        elif choice == "4":
            print("Exiting the application. Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 4.")

if __name__ == "__main__":
    main()






//bài5
import tkinter as tk
from tkinter import messagebox

# Function to be called when the button is clicked
def on_button_click():
    messagebox.showinfo("Button Clicked", "Hello! You clicked the button.")

# Create the main window
root = tk.Tk()
root.title("Simple Tkinter Window")
root.geometry("300x200")  # Set the window size

# Create a label widget
label = tk.Label(root, text="Welcome to the Tkinter Window!", font=("Arial", 14))
label.pack(pady=20)  # Add padding for better positioning

# Create a button widget
button = tk.Button(root, text="Click Me", font=("Arial", 12), command=on_button_click)
button.pack(pady=10)  # Add padding below the button

# Run the main event loop to display the window
root.mainloop()


//bài6




















