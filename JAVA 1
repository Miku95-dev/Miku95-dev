// BAI 1

Dưới đây là một ví dụ về cách tạo một ứng dụng Java sử dụng Java Servlet để tạo một trang HTML cơ bản. Trang HTML sẽ hiển thị một tin nhắn đơn giản khi người dùng truy cập vào trình duyệt.

Đầu tiên, chúng ta cần tạo một Servlet để xử lý yêu cầu từ trình duyệt và gửi trang HTML về cho người dùng:

import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class HelloWorldServlet extends HttpServlet {
    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Thiết lập kiểu nội dung và mã ký tự của trang HTML
        response.setContentType("text/html");
        response.setCharacterEncoding("UTF-8");

        // Tạo một PrintWriter để gửi dữ liệu về trình duyệt
        PrintWriter out = response.getWriter();
        out.println("<html><head><title>Hello World Servlet</title></head>");
        out.println("<body>");
        out.println("<h1>Hello, world!</h1>");
        out.println("<p>This is a simple Java Servlet example.</p>");
        out.println("</body></html>");
        out.close();
    }
}

Tiếp theo, chúng ta cần cấu hình máy chủ web (ví dụ: Apache Tomcat) để chạy ứng dụng Java này.

Cuối cùng, chúng ta cần tạo một tệp web.xml để ánh xạ URL đến Servlet:

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
    <servlet>
        <servlet-name>HelloWorldServlet</servlet-name>
        <servlet-class>HelloWorldServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>HelloWorldServlet</servlet-name>
        <url-pattern>/hello</url-pattern>
    </servlet-mapping>
</web-app>

Trong ví dụ này, Servlet được ánh xạ với URL "/hello". Khi truy cập URL này trên trình duyệt, Servlet sẽ được gọi và trang HTML sẽ được gửi về trình duyệt, hiển thị tin nhắn "Hello, world!".

Đây chỉ là một ví dụ cơ bản, bạn có thể mở rộng và tùy chỉnh nó theo nhu cầu cụ thể của bạn.

// BAI 2
public class ArrayExample {
    public static void main(String[] args) {
        // Khai báo và khởi tạo một mảng nguyên
        int[] myArray = {1, 2, 3, 4, 5};

        // In các phần tử của mảng
        System.out.print("Array elements: ");
        for (int i = 0; i < myArray.length; i++) {
            System.out.print(myArray[i] + " ");
        }
        System.out.println();

        // Truy cập phần tử của mảng
        System.out.println("Element at index 0: " + myArray[0]);
        System.out.println("Element at index 2: " + myArray[2]);

        // Thay đổi giá trị của phần tử
        myArray[1] = 10;
        System.out.print("Updated array: ");
        for (int i = 0; i < myArray.length; i++) {
            System.out.print(myArray[i] + " ");
        }
        System.out.println();

        // Duyệt qua các phần tử của mảng sử dụng vòng lặp for-each
        System.out.print("Array elements: ");
        for (int item : myArray) {
            System.out.print(item + " ");
        }
        System.out.println();

        // Tính tổng các phần tử của mảng
        int sum = 0;
        for (int item : myArray) {
            sum += item;
        }
        System.out.println("Sum of elements: " + sum);

        // Tìm giá trị lớn nhất và nhỏ nhất trong mảng
        int max = myArray[0];
        int min = myArray[0];
        for (int i = 1; i < myArray.length; i++) {
            if (myArray[i] > max) {
                max = myArray[i];
            }
            if (myArray[i] < min) {
                min = myArray[i];
            }
        }
        System.out.println("Max value: " + max);
        System.out.println("Min value: " + min);
    }
}


// BAI 3



public class ArrayExample {
    public static void main(String[] args) {
        // Declaring and initializing an integer array
        int[] intArray = {1, 2, 3, 4, 5};

        // Accessing elements of the integer array
        System.out.println("Integer Array Elements:");
        for (int i = 0; i < intArray.length; i++) {
            System.out.println("Element at index " + i + ": " + intArray[i]);
        }

        // Declaring and initializing a string array
        String[] stringArray = {"Java", "Python", "C++", "JavaScript"};

        // Accessing elements of the string array
        System.out.println("\nString Array Elements:");
        for (int i = 0; i < stringArray.length; i++) {
            System.out.println("Element at index " + i + ": " + stringArray[i]);
        }

        // Declaring an array and assigning values later
        double[] doubleArray = new double[3];
        doubleArray[0] = 1.1;
        doubleArray[1] = 2.2;
        doubleArray[2] = 3.3;

        // Accessing elements of the double array
        System.out.println("\nDouble Array Elements:");
        for (int i = 0; i < doubleArray.length; i++) {
            System.out.println("Element at index " + i + ": " + doubleArray[i]);
        }

        // Summing elements of an integer array
        int sum = 0;
        for (int i = 0; i < intArray.length; i++) {
            sum += intArray[i];
        }
        System.out.println("\nSum of elements in integer array: " + sum);
    }
}

//bai4
import java.util.Arrays;

public class ArrayMergeExample {
    public static void main(String[] args) {
        // First array
        int[] array1 = {1, 2, 3, 4};
        
        // Second array
        int[] array2 = {5, 6, 7, 8};
        
        // Resulting merged array
        int[] mergedArray = new int[array1.length + array2.length];
        
        // Copy elements from the first array
        System.arraycopy(array1, 0, mergedArray, 0, array1.length);
        
        // Copy elements from the second array
        System.arraycopy(array2, 0, mergedArray, array1.length, array2.length);
        
        // Print the merged array
        System.out.println("Merged Array: " + Arrays.toString(mergedArray));
    }
}

//bai5

import java.util.HashMap;
import java.util.Scanner;

public class LoginSystem {
    // A HashMap to store usernames and passwords
    private static HashMap<String, String> users = new HashMap<>();

    // Initialize with some dummy data
    static {
        users.put("admin", "admin123");
        users.put("user", "user123");
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to the Login System!");

        // Prompt user for login credentials
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        // Check if login is successful
        if (authenticate(username, password)) {
            System.out.println("\nLogin successful! Welcome, " + username + "!");
        } else {
            System.out.println("\nInvalid username or password.");
        }

        scanner.close();
    }

    // Method to authenticate the user
    private static boolean authenticate(String username, String password) {
        // Check if the username exists and the password matches
        return users.containsKey(username) && users.get(username).equals(password);
    }
}





//bai6














